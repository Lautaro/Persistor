// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AdaptorCodeGenerator.
//     DO NOT EDIT. Any changes will be lost when the file is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
using PersistorEngine;
using PersistorEngine.Internal;
using UnityEngine;
[DataFor(typeof(Enemy))]
[System.Serializable]
public partial class Enemy__Data
{
    public string persistorId;
    public string anchorId;
    public string parentId;
    public int siblingIndex;
    public string gameObjectName;
    public string unitName;
    public int health;
    public float speed;
    public Vector3Persistor myVectorThreeAdaptor = new();
    public MyTypeAdaptor myTypeAdaptor = new();
    public string mySharedDataId;
    public TransformAdaptor transformAdaptor = new();

    public void CopyToData(Enemy unit)
    {
        this.persistorId = unit.persistorId;
        // Hierarchy persistence
        var parent = unit.transform.parent;
        if (parent != null)
        {
            var anchor = parent.GetComponent<PersistorAnchor>();
            if (anchor != null)
            {
                this.anchorId = anchor.AnchorID;
                this.parentId = null;
            }
            else
            {
                var parentPMB = parent.GetComponent<PersistorMonoBehaviour>();
                if (parentPMB != null)
                {
                    this.parentId = parentPMB.persistorId;
                    this.anchorId = null;
                }
                else
                {
                    this.anchorId = null;
                    this.parentId = null;
                }
            }
        }
        else
        {
            this.anchorId = null;
            this.parentId = null;
        }
        this.siblingIndex = unit.transform.GetSiblingIndex();
        this.gameObjectName = unit.gameObject.name;
        this.unitName = unit.unitName;
        this.health = unit.health;
        this.speed = unit.speed;
        myVectorThreeAdaptor.CopyToData(unit.myVectorThree);
        if (unit.myType != null) myTypeAdaptor.CopyToData(unit.myType);
        this.mySharedDataId = unit.mySharedData != null ? unit.mySharedData.persistorId : null;
        transformAdaptor.CopyToData((MonoBehaviour)unit);
    }

    public void CopyFromData(Enemy unit, Transform parent, int siblingIndex)
    {
        unit.persistorId = this.persistorId;
        // Hierarchy restoration (parameters provided by Persistor.LoadAll)
        unit.transform.SetParent(parent, true);
        unit.transform.SetSiblingIndex(siblingIndex);
        unit.gameObject.name = this.gameObjectName;
        unit.unitName = this.unitName;
        unit.health = this.health;
        unit.speed = this.speed;
        myVectorThreeAdaptor.CopyFromData(ref unit.myVectorThree);
        if (unit.myType != null) myTypeAdaptor.CopyFromData(unit.myType);
        unit.mySharedData = PersistorRegistry.Resolve<MySharedData>(this.mySharedDataId);
        transformAdaptor.CopyFromData((MonoBehaviour)unit);
    }
}