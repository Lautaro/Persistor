// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AdaptorCodeGenerator.
//     DO NOT EDIT. Any changes will be lost when the file is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
using PersistorEngine;
using PersistorEngine.Internal;
using UnityEngine;
[DataFor(typeof(Girl))]
[System.Serializable]
public partial class Girl__Data
{
    public string persistorId;
    public string anchorId;
    public string parentId;
    public int siblingIndex;
    public string gameObjectName;
    public string GirlName;
    public string Mood;

    public void CopyToData(Girl unit)
    {
        this.persistorId = unit.persistorId;
        // Hierarchy persistence
        var parent = unit.transform.parent;
        if (parent != null)
        {
            var anchor = parent.GetComponent<PersistorAnchor>();
            if (anchor != null)
            {
                this.anchorId = anchor.AnchorID;
                this.parentId = null;
            }
            else
            {
                var parentPMB = parent.GetComponent<PersistorMonoBehaviour>();
                if (parentPMB != null)
                {
                    this.parentId = parentPMB.persistorId;
                    this.anchorId = null;
                }
                else
                {
                    this.anchorId = null;
                    this.parentId = null;
                }
            }
        }
        else
        {
            this.anchorId = null;
            this.parentId = null;
        }
        this.siblingIndex = unit.transform.GetSiblingIndex();
        this.gameObjectName = unit.gameObject.name;
        this.GirlName = unit.GirlName;
        this.Mood = unit.Mood;

    }

    public void CopyFromData(Girl unit)
    {
        unit.persistorId = this.persistorId;
        // Hierarchy restoration
        Transform newParent = null;
        if (!string.IsNullOrEmpty(this.anchorId))
        {
            var anchors = UnityEngine.Object.FindObjectsByType<PersistorAnchor>(FindObjectsSortMode.None);
            foreach (var anchor in anchors)
            {
                if (anchor.AnchorID == this.anchorId)
                {
                    newParent = anchor.transform;
                    break;
                }
            }
        }
        else if (!string.IsNullOrEmpty(this.parentId))
        {
            var allPMBs = UnityEngine.Object.FindObjectsByType<PersistorMonoBehaviour>(FindObjectsSortMode.None);
            foreach (var pmb in allPMBs)
            {
                if (pmb.persistorId == this.parentId)
                {
                    newParent = pmb.transform;
                    break;
                }
            }
        }
        unit.transform.SetParent(newParent, true);
        unit.transform.SetSiblingIndex(this.siblingIndex);
        unit.gameObject.name = this.gameObjectName;
        unit.GirlName = this.GirlName;
        unit.Mood = this.Mood;

    }
}